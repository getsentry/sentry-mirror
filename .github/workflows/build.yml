name: Build

on:
  push:
    branches:
      - main
      - release/**

  pull_request:

permissions:
  contents: read

jobs:
  build:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            platform: amd64
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-22.04-arm
            platform: arm64
            target: aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust Toolchain
        run: |
          rustup toolchain install stable --profile minimal --target ${{ matrix.target }} --no-self-update

      # Ensure a clean build on release, use caches when building main.
      - uses: swatinem/rust-cache@v2
        if: ${{ !startsWith(github.ref, 'refs/heads/release/') }}
        with:
          key: ${{ github.job }}

      - name: Build Binary
        run: |
          cargo build --release --locked --target=${{ matrix.target }} --bin sentry-mirror
          cp target/${{ matrix.target }}/release/sentry-mirror ./sentry-mirror

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/${{ matrix.platform }}
          tags: ${{ matrix.platform }}
          outputs: type=docker,dest=/tmp/sentry-mirror-${{ matrix.platform }}.tar
          push: false

      - name: Test Image
        run: |
          docker load --input /tmp/sentry-mirror-${{ matrix.platform }}.tar
          docker run --rm ${{ matrix.platform }} --help | grep -q '^Usage: sentry-mirror'

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
          name: sentry-mirror-${{ matrix.platform }}
          path: /tmp/sentry-mirror-${{ matrix.platform }}.tar

  assemble-gar:
    name: Publish to GAR
    runs-on: ubuntu-latest
    needs: [build]

    # Intentionally never publish on pull requests
    if: ${{ github.event_name != 'pull_request' }}

    permissions:
      id-token: write

    env:
      REGISTRY: us-docker.pkg.dev/sentryio/sentry-mirror/image

    steps:
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: projects/868781662168/locations/global/workloadIdentityPools/prod-github/providers/github-oidc-pool
          service_account: gha-gcr-push@sac-prod-sa.iam.gserviceaccount.com

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v3"
        with:
          version: ">= 390.0.0"

      - name: Configure docker
        run: gcloud auth configure-docker us-docker.pkg.dev

      - name: Download Images
        uses: actions/download-artifact@v5
        with:
          pattern: sentry-mirror-*
          path: /tmp
          merge-multiple: true

      - name: Push to Google Artifact Registry
        run: |
          for PLATFORM in amd64 arm64; do
            docker load --input /tmp/sentry-mirror-$PLATFORM.tar
            docker tag $PLATFORM $REGISTRY:${{ github.sha }}-$PLATFORM
            docker push $REGISTRY:${{ github.sha }}-$PLATFORM
          done

          for TAG in ${{ github.sha }} latest; do
            docker manifest create $REGISTRY:$TAG \
              --amend $REGISTRY:${{ github.sha }}-amd64 \
              --amend $REGISTRY:${{ github.sha }}-arm64
            docker manifest push $REGISTRY:$TAG
          done
